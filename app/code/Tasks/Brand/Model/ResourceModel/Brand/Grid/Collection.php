<?php
/**
 * Magecom
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to info@magecom.net so we can send you a copy immediately.
 *
 * @category Magecom
 * @package Magecom_Module
 * @copyright Copyright (c) 2017 Magecom, Inc. (http://www.magecom.net)
 * @license  http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

namespace Tasks\Brand\Model\ResourceModel\Brand\Grid;

/**
 * Class Collection
 * @package Tasks\Learning\Model\ResourceModel\MagecomItem\Grid
 */
class Collection extends \Tasks\Brand\Model\ResourceModel\Brand\Collection implements \Magento\Framework\Api\Search\SearchResultInterface
{
    /**
     * Aggregations
     *
     * @var \Magento\Framework\Search\AggregationInterface
     */
    protected $_aggregations;

    /**
     * constructor
     *
     * @param \Magento\Framework\Data\Collection\EntityFactoryInterface $entityFactory
     * @param \Psr\Log\LoggerInterface $logger
     * @param \Magento\Framework\Data\Collection\Db\FetchStrategyInterface $fetchStrategy
     * @param \Magento\Framework\Event\ManagerInterface $eventManager
     * @param $mainTable
     * @param $eventPrefix
     * @param $eventObject
     * @param $resourceModel
     * @param $model
     * @param $connection
     * @param \Magento\Framework\Model\ResourceModel\Db\AbstractDb $resource
     */
//    public function __construct(
//        \Magento\Framework\Data\Collection\EntityFactory $entityFactory,
//        \Psr\Log\LoggerInterface $logger,
//        \Magento\Framework\Data\Collection\Db\FetchStrategyInterface $fetchStrategy,
//        \Magento\Framework\Event\ManagerInterface $eventManager,
//        \Magento\Eav\Model\Config $eavConfig,
//        \Magento\Framework\App\ResourceConnection $resource,
//        \Magento\Eav\Model\EntityFactory $eavEntityFactory,
//        \Magento\Catalog\Model\ResourceModel\Helper $resourceHelper,
//        \Magento\Framework\Validator\UniversalFactory $universalFactory,
//        \Magento\Store\Model\StoreManagerInterface $storeManager,
//        \Tasks\Brand\Model\ResourceModel\Brand\CollectionFactory $brandCollectionFactory,
//        \Magento\Framework\DB\Adapter\AdapterInterface $connection = null,
//        $mainTable,
//        $eventPrefix,
//        $eventObject,
//        $resourceModel,
//        $model = 'Magento\Framework\View\Element\UiComponent\DataProvider\Document'
//    ) {
//        parent::__construct(
//            $entityFactory,
//            $logger,
//            $fetchStrategy,
//            $eventManager,
//            $eavConfig,
//            $resource,
//            $eavEntityFactory,
//            $resourceHelper,
//            $universalFactory,
//            $storeManager,
//            $connection
//        );
//        $this->_eventPrefix = $eventPrefix;
//        $this->_eventObject = $eventObject;
//        $this->_init($model, $resourceModel);
//        $this->setMainTable($mainTable);
//    }

    public function getItems()
    {
        $this->addAttributeToSelect('*');
        return parent::getItems(); // TODO: Change the autogenerated stub
    }

    /**
     * @return \Magento\Framework\Search\AggregationInterface
     */
    public function getAggregations()
    {
        return $this->_aggregations;
    }

    /**
     * @param \Magento\Framework\Search\AggregationInterface $aggregations
     * @return $this
     */
    public function setAggregations($aggregations)
    {
        $this->_aggregations = $aggregations;
    }


    /**
     * Get search criteria.
     *
     * @return \Magento\Framework\Api\SearchCriteriaInterface|null
     */
    public function getSearchCriteria()
    {
        return null;
    }

    /**
     * Set search criteria.
     *
     * @param \Magento\Framework\Api\SearchCriteriaInterface $searchCriteria
     * @return $this
     * @SuppressWarnings(PHPMD.UnusedFormalParameter)
     */
    public function setSearchCriteria(\Magento\Framework\Api\SearchCriteriaInterface $searchCriteria = null)
    {
        return $this;
    }

    /**
     * Get total count.
     *
     * @return int
     */
    public function getTotalCount()
    {
        return $this->getSize();
    }

    /**
     * Set total count.
     *
     * @param int $totalCount
     * @return $this
     * @SuppressWarnings(PHPMD.UnusedFormalParameter)
     */
    public function setTotalCount($totalCount)
    {
        return $this;
    }

    /**
     * Set items list.
     *
     * @param \Magento\Framework\Api\ExtensibleDataInterface[] $items
     * @return $this
     * @SuppressWarnings(PHPMD.UnusedFormalParameter)
     */
    public function setItems(array $items = null)
    {
        return $this;
    }
}
